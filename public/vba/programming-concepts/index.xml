<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming Concepts on The CAD Coder</title>
    <link>http://localhost:1313/vba/programming-concepts/</link>
    <description>Recent content in Programming Concepts on The CAD Coder</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright (c) The CAD Coder</copyright>
    <lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/vba/programming-concepts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Programming Concepts, Comments and Data-types</title>
      <link>http://localhost:1313/vba/programming-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/vba/programming-concepts/</guid>
      <description>&lt;p&gt;Visual Basic for application (VBA) is a real, live programming language, it uses many elements common to all programming languages.&lt;/p&gt;</description>
    </item>
    <item>
      <title>VBA Variables</title>
      <link>http://localhost:1313/vba/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/vba/variables/</guid>
      <description>&lt;p&gt;&lt;code&gt;VBAâ€™s&lt;/code&gt; main purpose is to manipulate data. &lt;code&gt;VBA&lt;/code&gt; stores the &lt;em&gt;data&lt;/em&gt; in your computerâ€™s &lt;em&gt;memory&lt;/em&gt;; it may or may not end up on disk.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Declaring and Scoping of Variables</title>
      <link>http://localhost:1313/vba/declaring-and-scoping-of-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/vba/declaring-and-scoping-of-variables/</guid>
      <description>&lt;p&gt;If you read the previous topics, you now know a bit about ðŸš€&lt;strong&gt;&lt;a href=&#34;http://localhost:1313/vba/variables&#34;&gt;Variables&lt;/a&gt; and &lt;a href=&#34;http://localhost:1313/vba/programming-concepts#data-types-in-vba&#34;&gt;Data-types&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In this topic, you discover how to &lt;strong&gt;declare&lt;/strong&gt; a &lt;code&gt;variable&lt;/code&gt; as a certain &lt;em&gt;data type&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Variable Scope</title>
      <link>http://localhost:1313/vba/variable-scope/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/vba/variable-scope/</guid>
      <description>&lt;p&gt;A &lt;em&gt;variableâ€™s&lt;/em&gt; scope determines which modules and procedures can use the variable.&lt;/p&gt;&#xA;&lt;h2 id=&#34;procedure-only-variables&#34;&gt;Procedure-only Variables&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;em&gt;lowest&lt;/em&gt; level of scope for a variable is at the &lt;strong&gt;procedure&lt;/strong&gt; level.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Public, Static and Variable&#39;s Life</title>
      <link>http://localhost:1313/vba/public-static-and-variables-life/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/vba/public-static-and-variables-life/</guid>
      <description>&lt;p&gt;In the following sections we will discussed about following topics:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Public Variables&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Static Variables&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Life of Variables&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s look at them one by one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>VBA Constants</title>
      <link>http://localhost:1313/vba/constants/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/vba/constants/</guid>
      <description>&lt;p&gt;A variableâ€™s value may (and usually does) change while your procedure is executing.&lt;/p&gt;&#xA;&lt;p&gt;Thatâ€™s why they call it a &lt;strong&gt;variable&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>VBA String Basics</title>
      <link>http://localhost:1313/vba/string-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/vba/string-basics/</guid>
      <description>&lt;p&gt;The &lt;code&gt;String&lt;/code&gt; data type represents a series of characters. This topic introduces the basic concepts of strings in Visual Basic.&lt;/p&gt;</description>
    </item>
    <item>
      <title>VBA Assignment Statements And Operators</title>
      <link>http://localhost:1313/vba/assignment-statements-and-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/vba/assignment-statements-and-operators/</guid>
      <description>&lt;p&gt;An &lt;em&gt;assignment statement&lt;/em&gt; is a &lt;em&gt;VBA statement&lt;/em&gt; that assigns the result of an expression to a variable or an object.&lt;/p&gt;</description>
    </item>
    <item>
      <title>VBA Looping</title>
      <link>http://localhost:1313/vba/looping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/vba/looping/</guid>
      <description>&lt;p&gt;The term &lt;em&gt;looping&lt;/em&gt; refers to repeating a block of VBA statements numerous times.&lt;/p&gt;&#xA;&lt;p&gt;VBA provides various looping command for repeating code to make correct decision making.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bug Finding</title>
      <link>http://localhost:1313/vba/bug-finding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/vba/bug-finding/</guid>
      <description>&lt;p&gt;A &lt;strong&gt;bug&lt;/strong&gt; is an error in your programming. Here I cover the topic of programming bugs â€” how to identify them and how to remove them from your module.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
